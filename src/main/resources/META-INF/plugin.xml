<idea-plugin>
    <id>com.mdrobnak.intellij-lalrpop</id>
    <name>LALRPOP</name>
    <vendor>Mark Drobnak</vendor>

    <description><![CDATA[
        Adds support for the <a href="https://github.com/lalrpop/lalrpop">LALRPOP</a> parser-generator.
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>org.rust.lang</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType
                name="LALRPOP"
                language="LALRPOP"
                extensions="lalrpop"
                implementationClass="com.mdrobnak.lalrpop.LpFileType"
                fieldName="INSTANCE"/>

        <lang.parserDefinition
                language="LALRPOP"
                implementationClass="com.mdrobnak.lalrpop.LpParserDefinition"/>

        <lang.syntaxHighlighter
                language="LALRPOP"
                implementationClass="com.mdrobnak.lalrpop.LpSyntaxHighlighter"/>

        <annotator language="LALRPOP" implementationClass="com.mdrobnak.lalrpop.annotator.LpHighlightingAnnotator"/>

        <multiHostInjector implementation="com.mdrobnak.lalrpop.injectors.LpRegexInjector"/>
        <multiHostInjector implementation="com.mdrobnak.lalrpop.injectors.LpRustActionCodeInjector"/>
        <multiHostInjector implementation="com.mdrobnak.lalrpop.injectors.LpRustImportCodeInjector"/>

        <lang.findUsagesProvider
                language="LALRPOP"
                implementationClass="com.mdrobnak.lalrpop.resolve.LpFindUsagesProvider"/>

        <lang.braceMatcher language="LALRPOP" implementationClass="com.mdrobnak.lalrpop.LpBraceMatcher"/>
        <lang.commenter language="LALRPOP" implementationClass="com.mdrobnak.lalrpop.LpCommenter"/>
        <lang.quoteHandler language="LALRPOP" implementationClass="com.mdrobnak.lalrpop.LpQuoteHandler"/>
        <lang.foldingBuilder language="LALRPOP" implementationClass="com.mdrobnak.lalrpop.LpFoldingBuilder"/>
        <localInspection language="LALRPOP" id="MissingTerminals" groupName="LALRPOP" displayName="Missing terminals"
                         implementationClass="com.mdrobnak.lalrpop.inspections.MissingTerminalsInspection"
                         enabledByDefault="true"
                         level="ERROR"/>
        <localInspection language="LALRPOP" id="NamedSymbols" groupName="LALRPOP"
                         displayName="Named selected symbols"
                         implementationClass="com.mdrobnak.lalrpop.inspections.NamedSymbolsInspection"
                         enabledByDefault="true"
                         level="ERROR"/>
        <localInspection language="LALRPOP" id="CannotInferNonterminalType" groupName="LALRPOP"
                         displayName="Cannot infer nonterminal type"
                         implementationClass="com.mdrobnak.lalrpop.inspections.CannotInferNonterminalTypeInspection"
                         enabledByDefault="true"
                         level="ERROR"/>
        <localInspection language="LALRPOP" id="CannotResolveNonterminalReference" groupName="LALRPOP"
                         displayName="Cannot resolve nonterminal reference"
                         implementationClass="com.mdrobnak.lalrpop.inspections.CannotResolveNonterminalReferenceInspection"
                         enabledByDefault="true"
                         level="ERROR"/>

        <!-- Prone to errors in the comparison and thus disabled by default. -->
        <localInspection language="LALRPOP" id="WrongInferredType" groupName="LALRPOP"
                         displayName="Inferred type does not correspond to explicit type declared on nonterminal"
                         implementationClass="com.mdrobnak.lalrpop.inspections.WrongInferredTypeInspection"
                         enabledByDefault="false"
                         level="ERROR"/>

    </extensions>
</idea-plugin>