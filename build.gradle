plugins {
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.grammarkit' version '2020.3.2'
    id 'idea'
}

import org.jetbrains.grammarkit.tasks.*

group 'com.mdrobnak'
version '0.2.2'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

// Add the generated source files into the build
sourceSets.main.java.srcDirs 'src/main/gen'
idea.module.generatedSourceDirs.add(file('src/main/gen'))

task generateLexer(type: GenerateLexer) {
    source = "src/main/grammars/LalrpopLexer.flex"
    targetDir = "src/main/gen/com/mdrobnak/lalrpop/lexer"
    targetClass = "LalrpopLexer"
    purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
    source = "src/main/grammars/LalrpopParser.bnf"
    targetRoot = "src/main/gen/"
    pathToParser = "/com/mdrobnak/lalrpop/parser/LalrpopParser.java"
    pathToPsiRoot = "/com/mdrobnak/lalrpop/psi"
    purgeOldFiles = true
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    // Test with the latest EAP
    version 'LATEST-EAP-SNAPSHOT'
    plugins = ['PsiViewer:211-SNAPSHOT', 'org.rust.lang:0.3.140.3644-203', 'org.toml.lang:0.2.140.3644-203']
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
        apiVersion = "1.3"
        freeCompilerArgs = ["-Xjvm-default=enable"]
    }

    dependsOn(generateLexer, generateParser)
}
runPluginVerifier {
    ideVersions = ["IIC-2020.3.1", "IIC-2020.2.4"]
}
publishPlugin {
    token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
}
patchPluginXml {
    // Support 2020.2
    sinceBuild "202.6397.94"

    changeNotes """
      <b>0.2.2</b><br>
      * Remove trailing newlines from user code<br>
      * Give color to commas<br>
      * Fix exception when refactoring affects injected Rust type references<br>
      * Fix refactoring in Rust code adding a duplicate action type in affected LALRPOP code<br>
      * Support 2021.1 EAP<br>
      <br>

      <b>0.2.1</b><br>
      * Inject Rust into type references (e.g. explicit nonterminal types)<br>
      * Handle fallible user actions (@dblanovschi)<br>
      * Add an intention to explicitly write the inferred the type of a nonterminal (@dblanovschi)<br>
      * Add an inspection for redundant user action code, such as <code>=> &lt;&gt;</code> (@dblanovschi)<br>
      * Support in-place renaming (@dblanovschi)<br>
      * Add type hints to nonterminals and (optionally) symbols (@dblanovschi)<br>
      <br>

      <b>0.2.0</b><br>
      * Handle <> expressions in action code (@dblanovschi)<br>
      * Infer nonterminal types and perform type resolution (@dblanovschi)<br>
      * Fix "Unable to save plugin settings" error (@dblanovschi)<br>
      * Add a bunch of inspections (@dblanovschi)<br>
      <br>

      <b>0.1.1</b><br>
      * Add missing terminals inspection (@dblanovschi)<br>
      * Add grammar params to injected action code (@dblanovschi)<br>
      * Add some code highlighting (ex. nonterminals) (@dblanovschi)<br>
      <br>

      <b>0.1.0</b><br>
      Initial release of the LALRPOP plugin
      """
}

test {
    useJUnitPlatform()

    maxHeapSize = "1G"
}