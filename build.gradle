plugins {
    id 'org.jetbrains.intellij' version '1.2.1'
    id 'org.jetbrains.kotlin.jvm' version '1.5.20'
    id 'org.jetbrains.grammarkit' version '2021.1.3'
    id 'idea'
}

import org.jetbrains.grammarkit.tasks.*

group 'com.mdrobnak'
version '0.2.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.sentry:sentry:5.4.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

// Add the generated source files into the build
sourceSets.main.java.srcDirs 'src/main/gen'
idea.module.generatedSourceDirs.add(file('src/main/gen'))

grammarKit {
    // Fix a error during parser generation. Might be related to
    // https://github.com/JetBrains/gradle-grammar-kit-plugin/issues/48
    grammarKitRelease = "2021.1.2"
}

task generateLexer(type: GenerateLexer) {
    source = "src/main/grammars/LalrpopLexer.flex"
    targetDir = "src/main/gen/com/mdrobnak/lalrpop/lexer"
    targetClass = "LalrpopLexer"
    purgeOldFiles = true
}

task generateParser(type: GenerateParser) {
    source = "src/main/grammars/LalrpopParser.bnf"
    targetRoot = "src/main/gen/"
    pathToParser = "/com/mdrobnak/lalrpop/parser/LalrpopParser.java"
    pathToPsiRoot = "/com/mdrobnak/lalrpop/psi"
    purgeOldFiles = true
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    // Test with a recent EAP or release
    version = '2021.3'
    plugins = ['PsiViewer:213-SNAPSHOT', 'org.rust.lang:0.4.160.4276-213', 'org.toml.lang:213.5744.224']
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
        apiVersion = "1.4"
        freeCompilerArgs = ["-Xjvm-default=enable"]
    }

    dependsOn(generateLexer, generateParser)
}
runPluginVerifier {
    ideVersions = ["IIC-2021.1", "IIC-2021.2", "IIC-2021.3"]
}
publishPlugin {
    token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
}
patchPluginXml {
    // Support 2021.1
    sinceBuild = "211.7142"

    changeNotes = """
      <b>0.2.8</b><br>
      * Fix an exception due to using non-unique text attribute keys (reported via Sentry)<br>
      * Fix an exception due to lexer emitting empty CODE tokens (reported via Sentry)<br>
      * Fix stack overflow when inferring type of self-referential nonterminal (reported via Sentry)<br>
      * Improve parser recovery when alternative fails to parse<br>
      * Fix possible lexer exception when Rust code block is empty<br>
      * Update dependencies<br>
      <br>

      <b>0.2.7</b><br>
      * Add error reporter for plugin crashes<br>
      * Support 2021.3 IDEs/EAP<br>
      * Possible fix for duplicate use/semicolon tokens after renaming item used in import<br>
      * Small improvements to the lexer<br>
      <br>

      <b>0.2.6</b><br>
      * Fix multi-line Rust string handling<br>
      <br>

      <b>0.2.5</b><br>
      * Fix some cases of parentheses/brackets/braces in Rust strings breaking the lexer<br>
      * Remove a deprecated function usage<br>
      <br>

      <b>0.2.4</b><br>
      * Improve parentheses counting in Rust code blocks to handle strings (fixes #45)<br>
      * Add support for 2021.2 IDEs<br>
      * Drop support for 2020 IDEs<br>
      * (internal) Update dependencies and Gradle<br>
      <br>

      <b>0.2.3</b><br>
      * (internal) Simplify the expansion of `<>` (@dblanovschi)<br>
      * (internal) Update dependencies and Gradle<br>
      * Fix finding the parser module declaration (this caused many weird issues)<br>
      <br>

      <b>0.2.2</b><br>
      * Remove trailing newlines from user code<br>
      * Give color to commas<br>
      * Fix exception when refactoring affects injected Rust type references<br>
      * Fix refactoring in Rust code adding a duplicate action type in affected LALRPOP code<br>
      * Support 2021.1 EAP<br>
      <br>

      <b>0.2.1</b><br>
      * Inject Rust into type references (e.g. explicit nonterminal types)<br>
      * Handle fallible user actions (@dblanovschi)<br>
      * Add an intention to explicitly write the inferred the type of a nonterminal (@dblanovschi)<br>
      * Add an inspection for redundant user action code, such as <code>=> &lt;&gt;</code> (@dblanovschi)<br>
      * Support in-place renaming (@dblanovschi)<br>
      * Add type hints to nonterminals and (optionally) symbols (@dblanovschi)<br>
      <br>

      <b>0.2.0</b><br>
      * Handle <> expressions in action code (@dblanovschi)<br>
      * Infer nonterminal types and perform type resolution (@dblanovschi)<br>
      * Fix "Unable to save plugin settings" error (@dblanovschi)<br>
      * Add a bunch of inspections (@dblanovschi)<br>
      <br>

      <b>0.1.1</b><br>
      * Add missing terminals inspection (@dblanovschi)<br>
      * Add grammar params to injected action code (@dblanovschi)<br>
      * Add some code highlighting (ex. nonterminals) (@dblanovschi)<br>
      <br>

      <b>0.1.0</b><br>
      Initial release of the LALRPOP plugin
      """
}

test {
    useJUnitPlatform()

    maxHeapSize = "1G"
}